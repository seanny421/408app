import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import useStore from '../global/state'
import {useEffect, useState} from 'react'
import { ThemeProvider, CssBaseline, Button } from '@mui/material'
import {darkTheme, lightTheme} from '../styles/themes'
import SettingsMenu from '../components/SettingsMenu'
import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg'
const ffmpeg = createFFmpeg({
  log: true,
  corePath: 'https://unpkg.com/@ffmpeg/core@latest/dist/ffmpeg-core.js'
})

const VideoCutTest: NextPage = () => {
  const store = useStore();
  const [isLight, setIsLight] = useState(true); //default is darkmode
  const [video, setVideo] = useState()
  const [cutVideo, setCutVideo] = useState()
  const [startTime, setStartTime] = useState<number>();
  const [endTime, setEndTime] = useState<number>();


  //run on store.isLight update
  useEffect(() => {
    setIsLight(store.isLight);
  }, [store.isLight]);


  const load = async() => {
    ffmpeg.load()
  }

  const createCutVideo = async() => {
    //write file to memory
    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video))
    //run the FFMpeg command
    // await ffmpeg.run('-i', 'test.mp4', '-t', '2.5', '-ss', '2.0', '-f', 'gif', 'out.gif');
    // await ffmpeg.run('-i', 'test.mp4', '-c', 'copy', '-map', '0', '-segment_time 00:00:00', '-f', 'segment output.mp4');
    await ffmpeg.run('-i', 'test.mp4', '-ss', String(startTime), '-t', String(endTime), '-c:v', 'copy', '-c:a', 'copy', 'output1.mp4')
// $ ffmpeg -i input.mp4 -ss 00:05:20 -t 00:10:00 -c:v copy -c:a copy output1.mp4

// ffmpeg -i input.mp4 -c copy -map 0 -segment_time 00:20:00 -f segment output%03d.mp4

    const data = ffmpeg.FS('readFile', 'output1.mp4')
    //creat a URL
    const url = URL.createObjectURL(new Blob([data.buffer], {type: 'video'}))
    setCutVideo(url)
  }


  //run once on store.urlList update
  useEffect(() => {
    load()
  }, []);


  return (
    <ThemeProvider theme={isLight ? lightTheme : darkTheme}>
      <CssBaseline/>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <SettingsMenu/>
          <h2 className={styles.title}>VideoCutTest</h2>
          {
            video && <video controls width="400" src={URL.createObjectURL(video)}></video>
          }
          <input type="file" onChange={(e) => setVideo(e.target.files?.item(0))}/>
          <label>Set start time: </label>
          <input type="text" onChange={(e) => setStartTime(e.target.value)}></input>
          <label>Set end time: </label>
          <input type="text" onChange={(e) => setEndTime(e.target.value)}></input>
          <button onClick={createCutVideo}>Cut</button>
          {
            cutVideo && <video controls width="400" src={cutVideo}/>
          }
        </main>
      </div>
    </ThemeProvider>
  )
}

export default VideoCutTest
