import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import useStore from '../global/state'
import {useEffect, useState} from 'react'
import { ThemeProvider, CssBaseline, Button } from '@mui/material'
import {darkTheme, lightTheme} from '../styles/themes'
import SettingsMenu from '../components/SettingsMenu'
import { getAllDocs } from '../global/pouch.db'
import {CutVideoObject} from '../global/types'
import MainPreview from '../components/Editor/MainPreview'
import VideoSelectionList from '../components/Editor/VideoSelectionList'
import Timeline from '../components/Editor/Timeline'


const Editor: NextPage = () => {
  const store = useStore();
  const [isLight, setIsLight] = useState(true); //default is darkmode
  const [videos, setVideos] = useState<CutVideoObject[]>([]);


  //run on store.isLight update
  useEffect(() => {
    setIsLight(store.isLight);
  }, [store.isLight]);

  //run once on store.urlList update
  useEffect(() => {
    getVidsFromDB()
  }, []);

  useEffect(() => {
    console.log(videos)
  }, [videos]);

  async function getVidsFromDB(){
    const res = await getAllDocs('cutVideos')
    setVideos(res as CutVideoObject[])
    // console.log(typeof(res[0]))
  }


  return (
    <ThemeProvider theme={isLight ? lightTheme : darkTheme}>
      <CssBaseline/>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <SettingsMenu/>
          <h2 className={styles.title}>Editor</h2>
          {videos.length > 0 &&
            <MainPreview video={videos[0]}/>
          }
          <div id='editor-bottom-row' style={{display: 'flex', width: '90%', justifyContent: 'space-evenly'}}>
            <VideoSelectionList videos={videos}/>
            <Timeline/>
          </div>
        </main>
      </div>
    </ThemeProvider>
  )
}

export default Editor
